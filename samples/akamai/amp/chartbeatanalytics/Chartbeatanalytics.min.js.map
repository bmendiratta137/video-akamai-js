{"version":3,"sources":["../../../../src/ChartbeatAnalyticsStrategy.js","../../../../src/ChartbeatAnalytics.js","../../../../src/main.js"],"names":["player","this","onmediachanged","bind","addEventListener","onplaying","onpaused","onstarted","onended","ads","onadstarted","onadended","ChartbeatAnalyticsStrategy","currentTime","isLive","Math","floor","Date","toFixed","now","VideoState","PLAYED","ContentType","AD","contentType","adVO","adPosition","AdPosition","PREROLL","type","MIDROLL","POSTROLL","event","CONTENT","ChartbeatAnalytics","__proto__","Object","getPrototypeOf","call","config","data","value","_cbv_strategies","push","loadResources","mediaElement","sdk","akamai","amp","Plugin"],"mappings":"yHAiCSA,iBAAL,iBAAAC,KAAAC,eAAAC,KAAAF,mEAEOG,iBAAiB,YAAAH,KAAkBI,UAAKH,KAAAA,SACxCE,iBAAiB,WAAxBH,KAAqCK,SAAKC,KAAUJ,SAC7CC,iBAAiB,UAAxBH,KAAqCO,QAAKH,KAAUF,aAE7CC,EAAAA,gBAEHK,iBAAJ,UAAAR,KAAAS,YAAAP,KAAAF,SACIQ,iBAAa,QAAAR,KAAAU,UAAAR,KAAAF,iDA1CAW,IAAAA,8FAEV,qEAOA,cACI,aACA,kFAQJ,4BAEG,siBAwDNC,KAAAA,OAAAA,MAAJC,kCAGgBC,KAAKC,OAAMC,YAAaC,QAAtC,kdA0BQC,sGAKAC,WAAAC,gQAcOC,YAAAC,GAEZC,UAEL,WAAIC,EAAAA,KACFxB,KAAAyB,WAAAd,EAAAe,WAAAC,QAAA,WAAAH,EAAAI,KAAA5B,KAAAyB,WAAAd,EAAAe,WAAAG,QAAA,YAAAL,EAAAI,OAAA5B,KAAAyB,WAAAd,EAAAe,WAAAI,wEAUa,cAAPC,YAEJP,YAAAb,EACFU,YAAAW,kIC3IwBhC,MAAAiC,EAAAC,WAAAC,OAAAC,eAAAH,IAAAI,KAAArC,KAAAD,EAAAuC,iKAMb,MAAPC,MAEFA,GAAAA,KAAJA,GACE,WAEF,OAAKC,GAAiB,QAAAA,MAChBA,GAAQD,oHAON5B,QAED8B,OAAAA,OAAgBC,OAAK/B,kDAGvB+B,OAAKC,cAAYC,KAAAA,OAAtBC,uGA1B4CC,IAAOC,IAAIC,eAAAA,qBAAAA,OAAAA,IAAAA,OAAAA,cAAAA,ICA3DF,EAAOC,mBAAPd","file":"akamai/amp/chartbeatanalytics/Chartbeatanalytics.min.js","sourcesContent":["export default class ChartbeatAnalyticsStrategy {\n  static get ContentType() {\n    return {\n      AD: \"ad\",\n      CONTENT: \"ct\"\n    }\n  }\n\n  static get AdPosition() {\n    return {\n      PREROLL: \"a1\",\n      MIDROLL: \"a2\",\n      POSTROLL: \"a3\",\n      OVERLAY: \"a4\",\n      SPECIAL: \"a5\"\n    }\n  }\n\n  static get VideoState() {\n    return {\n      UNPLAYED: \"s1\",\n      PLAYED: \"s2\",\n      STOPPED: \"s3\",\n      COMPLETED: \"s4\"\n    }\n  }\n\n  static verify() {\n    return true\n  }\n\n  constructor(video) {\n    const player = video.amp\n    this.player = player\n\n    player.addEventListener(\"onmediachanged\", this.onmediachanged.bind(this))\n    player.addEventListener(\"onstarted\", this.onstarted.bind(this))\n    player.addEventListener(\"onplaying\", this.onplaying.bind(this))\n    player.addEventListener(\"onpaused\", this.onpaused.bind(this))\n    player.addEventListener(\"onended\", this.onended.bind(this))\n\n    let ads = player.ads\n    if (ads != null) {\n      ads.addEventListener(\"started\", this.onadstarted.bind(this))\n      ads.addEventListener(\"ended\", this.onadended.bind(this))\n    }\n  }\n\n  isReady() {\n    return this.isPlayerReady\n  }\n\n  getTitle() {\n    return this.player.media.title\n  }\n\n  getVideoPath() {\n    return this.player.src\n  }\n\n  getContentType() {\n    return this.contentType\n  }\n\n  getAdPosition() {\n    return this.adPosition\n  }\n\n  getTotalDuration() {\n    return this.player.duration * 1000\n  }\n\n  getState() {\n    return this.playbackState\n  }\n\n  getCurrentPlayTime() {\n    let currentTime = 0\n\n    if (this.player.media.isLive) {\n      currentTime = Math.floor(Date.now() / 1000)\n    }\n    else {\n      currentTime = this.player.currentTime.toFixed(1)\n    }\n\n    return currentTime\n  }\n\n  getBitrate() {\n    return this.player.quality || NaN\n  }\n\n  getThumbnailPath() {\n    return this.player.media.poster\n  }\n\n  getViewStartTime() {\n    return (this.videoStartTime) ? Math.round(Date.now() - this.videoStartTime) : 0\n  }\n\n  onmediachanged() {\n    this.playbackState = ChartbeatAnalyticsStrategy.VideoState.UNPLAYED\n    this.isPlayerReady = true\n  }\n\n  onstarted() {\n    this.contentType = ChartbeatAnalyticsStrategy.ContentType.CONTENT\n    this.videoStartTime = Date.now()\n  }\n\n  onplaying() {\n    this.contentType = ChartbeatAnalyticsStrategy.ContentType.CONTENT\n    this.playbackState = ChartbeatAnalyticsStrategy.VideoState.PLAYED\n  }\n\n  onended() {\n    this.playbackState = ChartbeatAnalyticsStrategy.VideoState.COMPLETED\n    this.videoStartTime = null\n  }\n\n  onpaused() {\n    this.playbackState = ChartbeatAnalyticsStrategy.VideoState.STOPPED\n  }\n\n  onadstarted(event) {\n    const adVO = event.detail\n    this.contentType = ChartbeatAnalyticsStrategy.ContentType.AD\n\n    if (adVO == null)\n      return\n\n    if (adVO.type == \"preroll\")\n      this.adPosition = ChartbeatAnalyticsStrategy.AdPosition.PREROLL\n    else if (adVO.type == \"midroll\")\n      this.adPosition = ChartbeatAnalyticsStrategy.AdPosition.MIDROLL\n    else if (adVO.type == \"postroll\")\n      this.adPosition = ChartbeatAnalyticsStrategy.AdPosition.POSTROLL\n  }\n\n  onadended(event) {\n    const adVO = event.detail\n    if (adVO == null || adVO.type != \"postroll\")\n      return\n\n    this.contentType = ChartbeatAnalyticsStrategy.ContentType.CONTENT\n  }\n}\n","import ChartbeatAnalyticsStrategy from \"./ChartbeatAnalyticsStrategy.js\"\n\nexport default class ChartbeatAnalytics extends akamai.amp.Plugin {\n\n  constructor(player, config) {\n    super(player, config)\n  }\n\n  setConfigMetadata() {\n    const config = window._sf_async_config = {}\n    const data = this.data.data\n\n    if (data == null)\n      return\n\n    for (let key in data) {\n      let value = data[key]\n      if (value == null || value == \"null\")\n        continue\n      config[key] = value\n    }\n  }\n\n  onready() {\n    window._cbv_strategies = window._cbv_strategies || []\n    window._cbv_strategies.push(ChartbeatAnalyticsStrategy)\n\n    _cbv = window._cbv || (window._cbv = [])\n    _cbv.push(this.player.mediaElement)\n\n    this.player.loadResources(this.config.sdk)\n  }\n\n  onmediachange() {\n    this.setConfigMetadata()\n  }\n}\n","import ChartbeatAnalytics from \"./ChartbeatAnalytics.js\"\n\nakamai.amp.AMP.registerPlugin(\"chartbeatanalytics\", akamai.amp.Plugin.createFactory(ChartbeatAnalytics))\n\nexport {ChartbeatAnalytics}\n"]}