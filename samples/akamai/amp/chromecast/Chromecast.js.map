{"version":3,"file":"Chromecast.js","sources":["../../../../src/ChromecastConstants.js","../../../../src/AmpCafSenderCaptioning.js","../../../../src/AmpCafSender.js","../../../../src/Chromecast.js","../../../../src/main.js"],"sourcesContent":["export default class ChromecastConstants {\n\n  static get ID() {\n    return \"chromecast\"\n  }\n\n  static get CHANNEL_ID() {\n    return \"urn:x-cast:com.akamai.amp.cast\"\n  }\n\n  static get APPLICATION_ID() {\n    return \"CC1AD845\"\n  }\n\n  static get SUPPORTED_TYPES() {\n    return [\n      akamai.amp.Utils.mimeTypes.m3u8,\n      akamai.amp.Utils.mimeTypes.mp4,\n      akamai.amp.Utils.mimeTypes.mpd,\n      akamai.amp.Utils.mimeTypes.ism,\n      akamai.amp.Utils.mimeTypes.webm,\n      akamai.amp.Utils.mimeTypes.mp3\n    ]\n  }\n}\n","export default class AmpCafSenderCaptioning extends akamai.amp.EventDispatcher {\n\n  constructor(player) {\n    super()\n    this.player = player.player\n    this.plugin = player.plugin\n    this._hidden = this.player.captioning.hidden\n    this._tracks = []\n    this.onEditTracksInfoSuccess = this.onEditTracksInfoSuccess.bind(this)\n    this.onEditTracksInfoError = this.onEditTracksInfoError.bind(this)\n\n    this.autoSelectTrack()\n    this.hidden = this.player.hidden\n  }\n\n  get tracks() {\n    const mediaSession = this.plugin.mediaSession\n    if (mediaSession == null || mediaSession.media == null || mediaSession.media.tracks == null) {\n      return []\n    }\n    return mediaSession.media.tracks.filter((track) => (track.subtype == chrome.cast.media.TextTrackType.CAPTIONS) ? track : null)\n  }\n\n  get track() {\n    return this._track || {}\n  }\n\n  set track(value) {\n    this._track = value\n  }\n\n  get hidden() {\n    return this._hidden\n  }\n\n  set hidden(value) {\n    if (value == this._hidden) {\n      return\n    }\n    this._hidden = value\n\n    const activeTrackIds = (value) ? [] : [this.track.trackId]\n    const tracksInfoRequest = new chrome.cast.media.EditTracksInfoRequest(activeTrackIds)\n    this.plugin.mediaSession.editTracksInfo(tracksInfoRequest, this.onEditTracksInfoSuccess, this.onEditTracksInfoError)\n\n    this.dispatch(\"visibilitychange\", !this._hidden)\n  }\n\n  onEditTracksInfoSuccess(event) {\n\n  }\n\n  onEditTracksInfoError(event) {\n\n  }\n\n  selectTrackByLanguage(lang) {\n    const track = this.tracks.filter((track) => (track.language === lang))[0]\n    if (track != null) {\n      this.track = track\n    }\n    return track\n  }\n\n  changeSettings(obj) {\n\n  }\n\n  autoSelectTrack() {\n    let lang = this.player.language\n    let track = null\n\n    if (lang != null) {\n      lang = lang.split(\"-\").shift()\n      track = this.selectTrackByLanguage(lang)\n    }\n\n    return track\n  }\n}\n","import AmpCafSenderCaptioning from \"./AmpCafSenderCaptioning\"\n\nexport default class AmpCafSender extends akamai.amp.EventDispatcher {\n\n  constructor(plugin) {\n    super()\n    this.player = plugin.player\n    this.config = akamai.amp.Utils.clone(this.player.config)\n    this.plugin = plugin\n    this.state = {\n      playState: akamai.amp.PlayState.READY,\n      waiting: false,\n      seeking: false\n    }\n\n    this.onRemotePlayerChange = this.onRemotePlayerChange.bind(this)\n    this.onMediaSession = this.onMediaSession.bind(this)\n    this.onMediaSession()\n\n    this.plugin.castSession.addEventListener(cast.framework.SessionEventType.MEDIA_SESSION, this.onMediaSession)\n\n    this.createElements()\n    this.loadPlugins()\n      .then(() => {\n        this.dispatch(akamai.amp.Events.READY)\n        this.dispatch(akamai.amp.Events.MEDIA_CHANGE, this.media)\n        this.dispatch(akamai.amp.Events.CAN_PLAY_THROUGH)\n      })\n  }\n\n  createElements() {\n    this.container = document.createElement(\"div\")\n    this.container.className = \"amp-chromecast-sender\"\n    this.player.container.appendChild(this.container)\n\n    this.message = document.createElement(\"div\")\n    this.message.className = \"amp-chromecast-sender-msg\"\n    const element = document.createElement(\"div\")\n    element.className = \"amp-chromecast-sender-text\"\n    element.innerHTML = this.getLocalizedString(\"MSG_CHROMECAST_MESSAGE\", {device: this.plugin.castSession.getCastDevice().friendlyName})\n    this.message.appendChild(element)\n    this.player.container.appendChild(this.message)\n  }\n\n  loadPlugins() {\n    this.chromecast = {\n      available: true,\n      launch: () => this.plugin.launch()\n    }\n\n    if (this.player.captioning != null) {\n      this.captioning = new AmpCafSenderCaptioning(this)\n    }\n\n    this.localization = {\n      getLanguageString: (lang) => this.player.localization.getLanguageString(lang),\n      getString: (key) => this.player.localization.getString(key)\n    }\n\n    const type = this.player.mode\n    const key = \"react\"\n    const def = akamai.amp.AMP.plugins[key][type]\n    const config = this.config.plugins.react\n    config.mode = akamai.amp.react.Mode.PERSISTENT\n\n    if (def == null) {\n      throw new Error(`[AMP] Plugin could not be found: ${key}`)\n    }\n\n    return def(this, config, key)\n      .then((plugin) => {\n        this[key] = plugin\n        if (plugin.feature != null) {\n          this[plugin.feature] = plugin\n        }\n        this.logger.log(`[AMP] Plugin registered: ${key}`)\n      })\n      .catch((error) => this.logger.error(error))\n  }\n\n  onRemotePlayerChange(event) {\n    const type = cast.framework.RemotePlayerEventType\n    const amp = akamai.amp.Events\n\n    switch (event.field) {\n      case \"mediaInfo\":\n        if (event.value) {\n          this.playState = this.remotePlayer.playerState.toLowerCase()\n          this.dispatch(akamai.amp.Events.DURATION_CHANGE, event.value.duration)\n        }\n      break\n\n      case \"currentTime\":\n        if (this.seeking === true) {\n          this.dispatch(akamai.amp.Events.CAN_PLAY_THROUGH)\n          this.dispatch(akamai.amp.Events.SEEKED)\n          this.state.seeking = false\n        }\n\n        if (this.waiting === true) {\n          this.waiting = false\n        }\n\n        this.dispatch(amp.TIME_UPDATE, this.currentTime)\n      break\n\n      case \"duration\":\n        this.dispatch(amp.DURATION_CHANGE, this.duration)\n      break\n\n      case \"volumeLevel\":\n        this.dispatch(amp.VOLUME_CHANGE, this.volume)\n      break\n\n      case \"isMuted\":\n        this.dispatch(amp.VOLUME_CHANGE, (event.value) ? 0 : this.volume)\n        this.dispatch(amp.MUTE_CHANGE, this.muted)\n      break\n\n      case \"playerState\":\n        let state = null\n\n        switch (event.value) {\n          case chrome.cast.media.PlayerState.PLAYING:\n            state = akamai.amp.PlayState.PLAYING\n          break\n\n          case chrome.cast.media.PlayerState.PAUSED:\n            state = akamai.amp.PlayState.PAUSED\n          break\n\n          case chrome.cast.media.PlayerState.BUFFERING:\n            this.waiting = true\n          break\n        }\n\n        if (state) {\n          this.playState = state\n        }\n      break\n    }\n  }\n\n  onMediaSession(event) {\n    if (this.remotePlayerController != null) {\n      this.remotePlayerController.removeEventListener(cast.framework.RemotePlayerEventType.ANY_CHANGE, this.onRemotePlayerChange)\n    }\n    this.remotePlayer = new cast.framework.RemotePlayer()\n    this.remotePlayerController = new cast.framework.RemotePlayerController(this.remotePlayer)\n    this.remotePlayerController.addEventListener(cast.framework.RemotePlayerEventType.ANY_CHANGE, this.onRemotePlayerChange)\n  }\n\n  get mediaElement() {\n    return {}\n  }\n\n  get logger() {\n    return this.plugin.logger\n  }\n\n  set currentTime(value) {\n    if (value == this.state.currentTime) {\n      return\n    }\n\n    this.state.seeking = true\n    this.state.currentTime = value\n    this.remotePlayer.currentTime = value\n    this.remotePlayerController.seek()\n    this.dispatch(akamai.amp.Events.SEEKING)\n  }\n\n  get currentTime() {\n    return this.remotePlayer.currentTime\n  }\n\n  get duration() {\n    return this.remotePlayer.duration\n  }\n\n  set autoplay(value) {\n\n  }\n\n  get autoplay() {\n    return true\n  }\n\n  set media(value) {\n    this.plugin.load(value)\n  }\n\n  get media() {\n    const session = this.plugin.mediaSession\n    return (session != null && session.media.customData != null) ? session.media.customData.media : this.player.media\n  }\n\n  set volume(value) {\n    this.remotePlayer.volumeLevel = value\n    this.remotePlayerController.setVolumeLevel()\n  }\n\n  get volume() {\n    return this.remotePlayer.volumeLevel\n  }\n\n  set muted(value) {\n    this.remotePlayerController.muteOrUnmute()\n  }\n\n  get muted() {\n    return this.remotePlayer.isMuted\n  }\n\n  set playbackRate(value) {\n\n  }\n\n  get playbackRate() {\n    return 1\n  }\n\n  set waiting(value) {\n    if (value == this.state.waiting) {\n      return\n    }\n\n    this.state.waiting = value\n    if (value) {\n      this.dispatch(akamai.amp.Events.WAITING)\n    }\n  }\n\n  get waiting() {\n    return this.state.waiting\n  }\n\n  get seeking() {\n    return this.state.seeking\n  }\n\n  get paused() {\n    return this.remotePlayer.isPaused\n  }\n\n  get ended() {\n    return false\n  }\n\n  set quality(value) {\n    return\n  }\n\n  get quality() {\n    return 0\n  }\n\n  get qualityMode() {\n    return \"auto\"\n  }\n\n  get qualityLevels() {\n    return []\n  }\n\n  get audioTracks() {\n    return []\n  }\n\n  set playState(value) {\n    const previous = this.state.playState\n    if (value == previous) {\n      return\n    }\n    this.state.playState = value\n    this.dispatch(akamai.amp.Events.PLAY_STATE_CHANGE, {previous, value})\n\n    switch (value) {\n      case akamai.amp.PlayState.PLAYING:\n        this.dispatch(akamai.amp.Events.PLAYING)\n      break\n\n      case akamai.amp.PlayState.PAUSED:\n        this.dispatch(akamai.amp.Events.PAUSE)\n      break\n\n      case akamai.amp.PlayState.ENDED:\n        this.dispatch(akamai.amp.Events.ENDED)\n      break\n    }\n  }\n\n  get playState() {\n    return this.state.playState\n  }\n\n  get viewComponent() {\n    return this.container\n  }\n\n  get settings() {\n    return this.player.settings\n  }\n\n  play() {\n    this.remotePlayerController.playOrPause()\n  }\n\n  pause() {\n    this.remotePlayerController.playOrPause()\n  }\n\n  getLocalizedString(value, context) {\n    return this.player.getLocalizedString(value, context)\n  }\n\n  destroy() {\n    if (this.remotePlayerController != null) {\n      this.remotePlayerController.removeEventListener(cast.framework.RemotePlayerEventType.ANY_CHANGE, this.onRemotePlayerChange)\n    }\n    this.plugin.castSession.removeEventListener(cast.framework.SessionEventType.MEDIA_SESSION, this.onMediaSession)\n    this.player.container.removeChild(this.container)\n    this.player.container.removeChild(this.message)\n  }\n}\n","import ChromecastConstants from \"./ChromecastConstants\"\nimport AmpCafSender from \"./AmpCafSender\"\n\nexport default class Chromecast extends akamai.amp.Plugin {\n\n  constructor(player, config) {\n    super(player, config)\n\n    this._available = false\n  }\n\n  onready() {\n    this.bindHandlers([\"onCastApiAvailable\", \"onCastStateChanged\", \"onSessionStateChanged\", \"onMediaSession\"])\n    window['__onGCastApiAvailable'] = this.onCastApiAvailable\n\n    this.player.loadResources(this.config.sdk)\n  }\n\n  get available() {\n    return this._available\n  }\n\n  setAvailable(value) {\n    if (value === this._available) {\n      return\n    }\n\n    this._available = value\n    this.player.dispatch(akamai.amp.Events.PLAYBACK_TARGET_AVAILABILITY_CHANGE, {target: ChromecastConstants.ID, available: value})\n  }\n\n  onCastApiAvailable(isAvailable) {\n    if (!isAvailable) {\n      return\n    }\n\n    this.castContext = cast.framework.CastContext.getInstance()\n\n    this.castContext.addEventListener(cast.framework.CastContextEventType.CAST_STATE_CHANGED, this.onCastStateChanged)\n    this.castContext.addEventListener(cast.framework.CastContextEventType.SESSION_STATE_CHANGED, this.onSessionStateChanged)\n    this.castContext.setOptions({\n      receiverApplicationId: this.config.applicationId,\n      autoJoinPolicy: chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED\n    })\n  }\n\n  onCastStateChanged(event) {\n    this.setAvailable((event.castState !== cast.framework.CastState.NO_DEVICES_AVAILABLE))\n  }\n\n  onSessionStateChanged(event) {\n    let mediaSession = null\n\n    switch (event.sessionState) {\n      case cast.framework.SessionState.SESSION_STARTING:\n        this.player.pause()\n        this.player.busy = true\n      break\n\n      case cast.framework.SessionState.SESSION_RESUMED:\n        this.player.busy = true\n        this.castSession = event.session\n        mediaSession = event.session.getMediaSession()\n        if (mediaSession.media && this.player.media) {\n          const sources = (this.player.media.sources || []).map((source) => source.src)\n          sources.push(this.player.media.src)\n          if (sources.includes(mediaSession.media.contentId)) {\n            this.onMediaSession({mediaSession})\n          }\n        }\n      break\n\n      case cast.framework.SessionState.SESSION_STARTED:\n        this.castSession = event.session\n        this.castSession.addEventListener(cast.framework.SessionEventType.MEDIA_SESSION, this.onMediaSession)\n        if (this.castSession.getMediaSession() == null) {\n          this.load(this.player.media, this.player.currentTime)\n        }\n      break\n\n      case cast.framework.SessionState.SESSION_ENDED:\n        mediaSession = event.session.getMediaSession()\n        if (mediaSession != null) {\n          this.player.currentTime = event.session.getMediaSession().currentTime\n        }\n        this.player.playbackTarget = \"amp\"\n      break\n    }\n  }\n\n  onMediaSession(event) {\n    this.mediaSession = event.mediaSession\n    this.player.playbackTarget = ChromecastConstants.ID\n  }\n\n  onplaybacktargetchange(event) {\n    if (event.detail.value === ChromecastConstants.ID) {\n      this.sender = new AmpCafSender(this)\n    }\n    else {\n      if (this.sender != null) {\n        this.sender.destroy()\n      }\n      this.player.busy = false\n    }\n  }\n\n  launch() {\n    this.castContext.requestSession()\n      .catch((error) => {\n        if (error != \"cancel\")\n          this.logger.error(error)\n      })\n  }\n\n  load(media, startTime = 0) {\n\n    if (media == null) {\n      return\n    }\n\n    const source = akamai.amp.Utils.selectSource(media.source, (type) => ChromecastConstants.SUPPORTED_TYPES.includes(type) ? \"maybe\" : \"\")\n\n    if (source == null) {\n      return\n    }\n\n    media.src = source.src\n    media.type = source.type\n\n    const metadata = new chrome.cast.media.GenericMediaMetadata()\n    metadata.title = media.title\n    metadata.subtitle = media.description\n    metadata.image = [new chrome.cast.Image(media.poster)]\n    metadata.releaseDate = (media.pubDate && media.pubDate.toISOString) ? media.pubDate.toISOString() : null\n\n    const mediaInfo = new chrome.cast.media.MediaInfo(source.src, source.type)\n    mediaInfo.duration = media.duration\n    mediaInfo.customData = {media}\n    mediaInfo.metadata = metadata\n\n    if (media.track && media.track.length > 0) {\n      mediaInfo.tracks = []\n      media.track.forEach((value, index) => {\n        const track = new chrome.cast.media.Track(index, chrome.cast.media.TrackType.TEXT)\n        track.subtype = chrome.cast.media.TextTrackType.CAPTIONS\n        track.name = amp.l10n.MSG_CLOSED_CAPTIONING\n        track.language = value.srclang\n        track.customData = value\n        track.trackContentId = value.src\n        track.trackContentType = value.type\n        mediaInfo.tracks.push(track)\n      })\n    }\n\n    const request = new chrome.cast.media.LoadRequest(mediaInfo)\n    request.currentTime = startTime\n\n    this.castSession.loadMedia(request)\n      .catch((error) => this.logger.error(error))\n  }\n}\n","import \"./main.less\"\nimport Chromecast from \"./Chromecast\"\n\nakamai.amp.AMP.registerPlugin(\"chromecast\", akamai.amp.Plugin.createFactory(Chromecast))\n\nexport {Chromecast}\n"],"names":["ChromecastConstants","akamai","amp","Utils","mimeTypes","m3u8","mp4","mpd","ism","webm","mp3","AmpCafSenderCaptioning","player","plugin","_hidden","captioning","hidden","_tracks","onEditTracksInfoSuccess","bind","onEditTracksInfoError","autoSelectTrack","event","lang","track","tracks","filter","language","obj","split","shift","selectTrackByLanguage","mediaSession","media","subtype","chrome","cast","TextTrackType","CAPTIONS","_track","value","activeTrackIds","trackId","tracksInfoRequest","EditTracksInfoRequest","editTracksInfo","dispatch","EventDispatcher","AmpCafSender","config","clone","state","PlayState","READY","onRemotePlayerChange","onMediaSession","castSession","addEventListener","framework","SessionEventType","MEDIA_SESSION","createElements","loadPlugins","then","Events","MEDIA_CHANGE","CAN_PLAY_THROUGH","container","document","createElement","className","appendChild","message","element","innerHTML","getLocalizedString","device","getCastDevice","friendlyName","chromecast","launch","localization","getLanguageString","key","getString","type","mode","def","AMP","plugins","react","Mode","PERSISTENT","Error","feature","logger","log","catch","error","RemotePlayerEventType","field","playState","remotePlayer","playerState","toLowerCase","DURATION_CHANGE","duration","seeking","SEEKED","waiting","TIME_UPDATE","currentTime","VOLUME_CHANGE","volume","MUTE_CHANGE","muted","PlayerState","PLAYING","PAUSED","BUFFERING","remotePlayerController","removeEventListener","ANY_CHANGE","RemotePlayer","RemotePlayerController","playOrPause","context","removeChild","seek","SEEKING","load","session","customData","volumeLevel","setVolumeLevel","muteOrUnmute","isMuted","WAITING","isPaused","previous","PLAY_STATE_CHANGE","PAUSE","ENDED","settings","Chromecast","_available","bindHandlers","onCastApiAvailable","loadResources","sdk","PLAYBACK_TARGET_AVAILABILITY_CHANGE","target","ID","available","isAvailable","castContext","CastContext","getInstance","CastContextEventType","CAST_STATE_CHANGED","onCastStateChanged","SESSION_STATE_CHANGED","onSessionStateChanged","setOptions","applicationId","AutoJoinPolicy","ORIGIN_SCOPED","setAvailable","castState","CastState","NO_DEVICES_AVAILABLE","sessionState","SessionState","SESSION_STARTING","pause","busy","SESSION_RESUMED","getMediaSession","sources","map","source","src","push","includes","contentId","SESSION_STARTED","SESSION_ENDED","playbackTarget","detail","sender","destroy","requestSession","startTime","selectSource","SUPPORTED_TYPES","metadata","GenericMediaMetadata","title","subtitle","description","image","Image","poster","releaseDate","pubDate","toISOString","mediaInfo","MediaInfo","length","forEach","index","Track","TrackType","TEXT","name","l10n","MSG_CLOSED_CAPTIONING","srclang","trackContentId","trackContentType","request","LoadRequest","loadMedia","Plugin","registerPlugin","createFactory"],"mappings":"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"}