{"version":3,"sources":["../../../../src/Nielsen.js","../../../../src/main.js"],"names":["_this","window","NOLCMB","data","isDTVR","dtvr","currentTime","ggInitialize","toFixed","events","type","video","vo","codes","player","logger","log","eventName","object","target","ads","this","onadstarted","onadended","addEventListener","adVO","position","fireBeacon","totalAds","generateNielsenVO","floor","media","isLive","event","detail","Date","now","value","info","akamai","amp","Plugin","registerPlugin"],"mappings":"+SAMIA,EAAWC,KAAOC,mCAEZC,YAAYA,IACbC,IAAAA,aAAeC,UACfC,iBAAL,eAAA,iBACAN,GAASO,WAAaJ,MAAtBH,EAAAM,YAAAE,QAAA,sJAMMC,iBAEN,MAAQC,EAARC,QAAAC,EAAAH,EAAAE,gJAmBME,oBAAQ,2BAAdC,OAAAC,OAAAC,IAAA,qCAAAC,EAAAC,6FAcMC,iBAAqBC,cAA3BC,KAAAC,eACIH,iBAAgB,YAAAE,KAAAE,aACXC,iBAAiB,iBAAeH,KAAKC,+FAQjC,YAAPZ,GAAN,GAAAW,KAAAI,KAAAC,UAAAL,KAAAM,WAAA,OAAAN,KAAAf,aAEY,WAARI,GAAAW,KAAqBM,WAAUD,eAC5BC,KAAAA,kBAAmB,YAEd,MAARjB,KAAAA,wKAQMW,KAAAI,KAAAG,UAAAH,KAAAC,UAAAL,KAAAM,WAAA,eAAAN,KAAAQ,kBAAA,gFAOJvB,MAAAA,aAAmBwB,4BAErBH,WAAKrB,aAAeA,KAAaA,8GAM3Be,KAAAQ,kBAAAR,KAAAI,KAAAf,YAEHiB,WAAW,eAAaE,KAAAA,kBAAuBJ,sJAYlDnB,GAAAe,KAAgBP,OAClBiB,MAAAC,OAAAC,EAAAC,OAAAC,KAAAC,MAAA,sCAGY9B,4BAEVqB,WAAKrB,aAAeA,KAAaA,4LAUvB2B,KAAOI,MAAAC,uCAxHYC,IAAOC,IAAIC,eAAAA,UAAAA,OAAAA,IAAAA,OAAAA,cAAAA,ICEhDF,EAAOC,QAAQE","file":"akamai/amp/nielsen/Nielsen.min.js","sourcesContent":["export default class Nielsen extends akamai.amp.Plugin {\n\n  constructor(player, config) {\n    super(player, config)\n\n    this.bindHandlers([\"onadstarted\", \"onadended\", \"onadtimeupdate\"])\n    this.sdk = window.NOLCMB.getInstance()\n\n    const data = this.data.data\n    this.isDTVR = (data.dtvr === true)\n    this.currentTime = 0\n    this.sdk.ggInitialize(data)\n    window.addEventListener(\"beforeunload\", () => this.fireBeacon(\"end\", this.currentTime.toFixed(0)))\n  }\n\n  generateNielsenVO(type) {\n    let vo = {}\n    const events = this.config.events\n\n    switch (type) {\n      case \"content\":\n        if (events.video != null)\n          vo = events.video\n      break\n\n      case \"static\":\n        vo = events.static\n      break\n\n      default:\n        vo = events.ad\n        vo.type = type\n    }\n\n    return vo\n  }\n\n  fireBeacon(eventName, object) {\n    const codes = {\n      \"loadmetadata\": 15,\n      \"play\": 5,\n      \"stop\": 7,\n      \"timeupdate\": 49,\n      \"end\": 57,\n      \"sendID3\": 55\n    }\n\n    this.player.logger.log(`[AMP Nielsen DCR Event] : Event - ${eventName}`, object)\n    this.sdk.ggPM(codes[eventName], object)\n  }\n\n  onready() {\n    const target = this.player.ads\n    if (target != null) {\n      target.addEventListener(\"onadstarted\", this.onadstarted)\n      target.addEventListener(\"onadended\", this.onadended)\n      target.addEventListener(\"onadtimeupdate\", this.onadtimeupdate)\n    }\n  }\n\n  onadstarted(event) {\n    this.adVO = event.detail\n    const type = this.adVO.type\n\n    if (type == \"midroll\" && this.adVO.position == 1)\n      this.fireBeacon(\"stop\", this.currentTime)\n\n    if (type == \"preroll\")\n      this.fireBeacon(\"loadmetadata\", this.generateNielsenVO(\"content\"))\n\n    if (this.adVO != null) {\n      this.fireBeacon(\"loadmetadata\", this.generateNielsenVO(type))\n    }\n  }\n\n  onadended() {\n    this.fireBeacon(\"stop\", this.currentTime)\n    if (this.adVO.type == \"midroll\" && this.adVO.totalAds == adVO.position)\n      this.fireBeacon(\"loadmetadata\", this.generateNielsenVO(\"content\"))\n  }\n\n  onadtimeupdate(event) {\n    const currentTime = Math.floor(event.detail)\n\n    if (this.currentTime != currentTime) {\n      this.currentTime = currentTime\n      this.fireBeacon(\"timeupdate\", this.currentTime)\n    }\n  }\n\n  onstarted() {\n    if (this.adVO && this.adVO.type == \"midroll\") {\n      this.fireBeacon(\"stop\", this.generateNielsenVO(this.adVO.type))\n    }\n    else {\n      this.fireBeacon(\"loadmetadata\", this.generateNielsenVO(\"content\"))\n    }\n  }\n\n  onended() {\n    this.fireBeacon(\"end\", this.currentTime)\n  }\n\n  ontimeupdate(event) {\n    if (this.isDTVR === true)\n      return\n\n    let currentTime = (this.player.media.isLive) ? event.detail : Date.now() / 1000\n    currentTime = Math.floor(currentTime)\n\n    if (this.currentTime != currentTime) {\n      this.currentTime = currentTime\n      this.fireBeacon(\"timeupdate\", this.currentTime)\n    }\n  }\n\n  onmediasequenceaborted() {\n    this.fireBeacon(\"end\", this.currentTime)\n  }\n\n  ontimedmetadata(event) {\n    if (!this.isDTVR)\n      return\n    this.fireBeacon(\"sendID3\", event.data.value.info)\n  }\n}\n","import Nielsen from \"./Nielsen.js\"\n\nakamai.amp.AMP.registerPlugin(\"nielsen\", akamai.amp.Plugin.createFactory(Nielsen))\n\nexport {Nielsen}\n"]}