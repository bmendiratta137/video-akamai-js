{"version":3,"sources":["../../../../src/components/Mouse.js","../../../../src/Aframe.js","../../../../src/main.js"],"names":["Mouse","NAME","enabled","speed","registerComponent","default","this","onMouseUp_","bind","onMouseDown_","onMouseMove_","directionY","THREE","Vector2","rotateEnd_","rotateDelta_","isDragging_","window","addEventListener","el","document","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","e","directionX","rotateStart_","set","clientX","clientY","isPointerLocked_","movementY","mozMovementY","movementX","mozMovementX","y","copy","data","dy","rotation","setAttribute","schema","value","_ref","Aframe","_akamai$amp$Plugin","container","player","scene","createElement","sphere","_this","isCompatible","sky","config","pattern","RegExp","strict","mouse","onMediaChangeHandler","indexOf","media","getChildEntities","hasSphereElement","category","poster","appendChild","removeChild","hasSkyElement","setDisplayState","mediaElement","layer","compatible","akamai","amp","Plugin","registerPlugin"],"mappings":"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","file":"akamai/amp/aframe/Aframe.min.js","sourcesContent":["class Mouse {\n  constructor(enabled, speed) {\n    this.NAME = \"mouse-rotation\";\n\n    this.register(enabled, speed)\n  }\n\n  register(enabled, speed) {\n    AFRAME.registerComponent(this.NAME, {\n      schema: {\n        enabled: { default: enabled || false },\n        dx: { default: 2.0 },\n        dy: { default: 2.0 },\n        speed: { default: speed != null ? speed / 10 : 0.3 }\n      },\n      rotateEnd_: null,\n      init: function () {\n        this.onMouseUp_ = this.onMouseUp_.bind(this);\n        this.onMouseDown_ = this.onMouseDown_.bind(this);\n        this.onMouseMove_ = this.onMouseMove_.bind(this);\n        this.directionX = 0;\n        this.directionY = 0;\n\n        this.rotateStart_ = new THREE.Vector2(),\n          this.rotateEnd_ = new THREE.Vector2(),\n          this.rotateDelta_ = new THREE.Vector2(),\n          this.isDragging_ = false\n      },\n      play: function () {\n        window.addEventListener('mousemove', this.onMouseMove_);\n        window.addEventListener('mousedown', this.onMouseDown_);\n        window.addEventListener('mouseup', this.onMouseUp_);\n      },\n      pause: function () {\n        window.addEventListener('mousemove', this.onMouseMove_);\n        window.addEventListener('mousedown', this.onMouseDown_);\n        window.addEventListener('mouseup', this.onMouseUp_);\n      },\n      isPointerLocked_: function () {\n        var el = document.pointerLockElement || document.mozPointerLockElement ||\n          document.webkitPointerLockElement;\n        return el !== undefined;\n      },\n      onMouseUp_: function (e) {\n        this.directionX = 0;\n        this.isDragging_ = false;\n      },\n      onMouseDown_: function (e) {\n        this.rotateStart_.set(e.clientX, e.clientY);\n        this.isDragging_ = true\n      },\n      onMouseMove_: function (e) {\n        if (!this.isDragging_ && !this.isPointerLocked_()) {\n          return;\n        }\n        if (!this.isPointerLocked_()) {\n          var movementX = e.movementX || e.mozMovementX || 0;\n          var movementY = e.movementY || e.mozMovementY || 0;\n          this.rotateEnd_.set(this.rotateStart_.x - movementX, this.rotateStart_.y - movementY);\n        } else {\n          this.rotateEnd_.set(e.clientX, e.clientY);\n        }\n        this.rotateDelta_.subVectors(this.rotateEnd_, this.rotateStart_);\n        this.rotateStart_.copy(this.rotateEnd_);\n\n        this.directionX = movementX * this.data.speed;\n      },\n      tick: function (t, dt) {\n        if (!this.data.enabled) { return; }\n        var rotation = this.el.getAttribute('rotation');\n        if (!rotation) { return; }\n        if ((this.directionX || this.directionY)) {\n          rotation.x += this.data.dx * this.directionY;\n          rotation.y += this.data.dy * this.directionX;\n\n          this.el.setAttribute('rotation', rotation);\n        }\n        if (this.data.speed !== this.schema.speed.default)\n          this.data.speed = this.schema.speed.default\n      }\n    });\n  };\n\n  update(value) {\n    let _ref;\n    if ((_ref = AFRAME.components[this.NAME]) != null && 10 > value ? _ref.schema != null : false) {\n      _ref.schema.speed.default = value / 10;\n    }\n  }\n}\n\nexport { Mouse as default }","import Mouse from \"./components/Mouse.js\"\n\nexport default class Aframe extends akamai.amp.Plugin {\n  constructor(player, config) {\n    super(player, config)\n\n    this.container = player.container\n    this.scene = document.createElement(\"a-scene\")\n    this.sphere = document.createElement(\"a-videosphere\")\n    this.sky = document.createElement(\"a-sky\");// 360 poster image\n    this.scene.setAttribute(\"vr-mode-ui\", `enabled: ${this.isCompatible()}`)\n    this.sphere.setAttribute(\"rotation\", this.config.data.rotation || \"0 180 0\")\n    this.pattern = typeof (config.data.pattern) != 'undefined' ? new RegExp(config.data.pattern, \"i\") : new RegExp(\"360\", \"i\");\n    this.pattern = config.data.strict ? this.pattern : new RegExp(\"\", \"i\");\n\n    if (config.mouse != null && config.mouse.speed) {\n      this.mouse = new Mouse(true, config.mouse.speed);\n    }\n  }\n\n  onready(event) {\n    this.initComponent();\n    this.player.addEventListener(\"mediachange\", this.onMediaChangeHandler.bind(this));\n  }\n\n  onMediaChangeHandler() {\n    let media = this.player.media !== null ? this.player.media : this.player.getMedia();\n    let hasSphereElement = this.scene.getChildEntities().indexOf(this.sphere) > -1;\n    let hasSkyElement = this.scene.getChildEntities().indexOf(this.sky) > -1;\n    let category = typeof (media.category) != 'undefined' ? media.category : \"\";\n\n    switch (media.medium) {\n      case 'audio':\n        this.sky.setAttribute(\"src\", media.poster);\n        this.scene.appendChild(this.sky);\n        this.player.setDisplayState('aframe-sky');\n        if (hasSphereElement)\n          this.scene.removeChild(this.sphere);\n        break;\n      default:\n        if (this.pattern.test(category)) {\n          this.player.setDisplayState('aframe-sphere');\n          if (hasSkyElement)\n            this.scene.removeChild(this.sky)\n          this.scene.appendChild(this.sphere);\n        }\n        else {\n          this.player.setDisplayState('non-sphere');\n          if (hasSphereElement)\n            this.scene.removeChild(this.sphere);\n        }\n        break;\n    }\n  }\n\n  initComponent() {\n    this.player.mediaElement.setAttribute(\"id\", \"videoamp\") // adding id to video player for sphere src reference\n    this.sphere.setAttribute(\"src\", \"#videoamp\")\n    this.sphere.setAttribute(\"mouse-rotation\", '')\n    this.scene.appendChild(this.sphere)\n\n    const layer = document.createElement(\"div\")\n    layer.className = \"amp-vr\"\n    layer.appendChild(this.scene)\n\n    //append a-frame scene to player\n    this.container.appendChild(layer)\n  }\n\n  updateMouseSpeed(value) {\n    if (this.mouse) {\n      this.mouse.update(value);\n    }\n  }\n\n  isCompatible() {\n    const compatible = (typeof navigator.getVRDisplays == \"function\")\n    if (compatible === false) {\n      console.log(\"Your browser is not compatible with A-Frame check this page out https://get.webgl.org/\")\n    }\n    return compatible\n  }\n}\n","import \"./main.less\"\nimport Aframe from \"./Aframe.js\"\n\nakamai.amp.AMP.registerPlugin(\"aframe\", typeof(akamai.amp.Plugin.createFactory) == 'function' ? akamai.amp.Plugin.createFactory(Aframe) : Aframe.factory)\n\nexport {Aframe}\n"]}